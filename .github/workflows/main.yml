name: CI DevOps 2024

on:
  # Lancer le workflow sur les branches main et develop
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  test-backend:
    runs-on: ubuntu-22.04
    steps:
      # Étape 1 : Récupérer le code depuis le dépôt GitHub
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      # Étape 2 : Configurer JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin' # Utilisation de la distribution OpenJDK Temurin

      # Étape 3 : Construire, tester et analyser l'application avec SonarCloud
      - name: Build, test, and analyze with SonarCloud
        working-directory: ./simple-api # Définit le bon répertoire pour exécuter Maven
        run: |
          mvn -B verify sonar:sonar \
            -Dsonar.projectKey=tonyeessome_devops-livecoding \
            -Dsonar.organization=tonyeessome \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build-and-push-docker-image:
    needs: test-backend # Exécuter ce job uniquement après que test-backend soit passé
    runs-on: ubuntu-22.04
    steps:
      # Étape 1 : Récupérer le code depuis le dépôt GitHub
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      # Étape 2 : Connexion à DockerHub
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      # Étape 3 : Construction et publication de l'image Docker pour l'API
      - name: Build and push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./simple-api # Répertoire contenant le Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      # Étape 4 : Construction et publication de l'image Docker pour la base de données
      - name: Build and push database image
        uses: docker/build-push-action@v3
        with:
          context: ./database # Répertoire contenant le Dockerfile de la base de données
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      # Étape 5 : Construction et publication de l'image Docker pour le serveur HTTP
      - name: Build and push HTTP server image
        uses: docker/build-push-action@v3
        with:
          context: ./http-server # Répertoire contenant le Dockerfile HTTP
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-http-server:latest
          push: ${{ github.ref == 'refs/heads/main' }}
